import React, { useState } from 'react';
import PageLayout from '../components/common/Pagelayout';
import styles from '../styles/Translation.module.css';

const Translation = () => {
  const [inputText, setInputText] = useState('');
  const [translatedText, setTranslatedText] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [sourceLanguage, setSourceLanguage] = useState('thai');

  const handleTranslate = async (e) => {
    e.preventDefault();
    
    if (!inputText.trim()) {
      setError('Vui l√≤ng nh·∫≠p vƒÉn b·∫£n c·∫ßn d·ªãch');
      return;
    }

    setLoading(true);
    setError('');

    try {
      // TODO: Implement translation logic
      setTimeout(() => {
        setTranslatedText(`[ƒê√£ d·ªãch]: ${inputText}`);
        setLoading(false);
      }, 1000);
    } catch (err) {
      setError('D·ªãch thu·∫≠t th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.');
      console.error('Translation error:', err);
      setLoading(false);
    }
  };

  const swapLanguages = () => {
    setSourceLanguage(sourceLanguage === 'thai' ? 'vietnamese' : 'thai');
    setInputText(translatedText);
    setTranslatedText(inputText);
  };

  return (
    <PageLayout title="D·ªãch thu·∫≠t">
      <div className={styles.translationContent}>
        <div className={styles.translationContainer}>
          <div className={styles.languageSelector}>
            <select 
              value={sourceLanguage} 
              onChange={(e) => setSourceLanguage(e.target.value)}
              className={styles.languageSelect}
            >
              <option value="thai">Th√°i ‚Üí Vi·ªát</option>
              <option value="vietnamese">Vi·ªát ‚Üí Th√°i</option>
            </select>
            <button 
              type="button" 
              onClick={swapLanguages}
              className={styles.swapButton}
            >
              ‚áÑ
            </button>
          </div>

          <form onSubmit={handleTranslate} className={styles.translationForm}>
            <div className={styles.textAreas}>
              <div className={styles.inputSection}>
                <label>
                  {sourceLanguage === 'thai' ? 'VƒÉn b·∫£n ti·∫øng Th√°i:' : 'VƒÉn b·∫£n ti·∫øng Vi·ªát:'}
                </label>
                <textarea
                  value={inputText}
                  onChange={(e) => setInputText(e.target.value)}
                  placeholder={`Nh·∫≠p ${sourceLanguage === 'thai' ? 'ti·∫øng Th√°i' : 'ti·∫øng Vi·ªát'} t·∫°i ƒë√¢y...`}
                  className={styles.inputTextarea}
                  rows="6"
                  disabled={loading}
                />
              </div>

              <div className={styles.outputSection}>
                <label>
                  {sourceLanguage === 'thai' ? 'B·∫£n d·ªãch ti·∫øng Vi·ªát:' : 'B·∫£n d·ªãch ti·∫øng Th√°i:'}
                </label>
                <textarea
                  value={translatedText}
                  readOnly
                  placeholder="B·∫£n d·ªãch s·∫Ω hi·ªÉn th·ªã t·∫°i ƒë√¢y..."
                  className={styles.outputTextarea}
                  rows="6"
                />
              </div>
            </div>

            <button 
              type="submit" 
              className={styles.translateButton}
              disabled={loading || !inputText.trim()}
            >
              {loading ? '‚è≥ ƒêang d·ªãch...' : 'üîÑ D·ªãch'}
            </button>
          </form>

          {error && <div className={styles.errorMessage}>{error}</div>}
        </div>

        <div className={styles.features}>
          <div className={styles.featureCard}>
            <h3>üé§ D·ªãch gi·ªçng n√≥i</h3>
            <p>S·∫Øp ra m·∫Øt: N√≥i v√† nh·∫≠n b·∫£n d·ªãch t·ª©c th√¨</p>
          </div>
          <div className={styles.featureCard}>
            <h3>üì∑ D·ªãch h√¨nh ·∫£nh</h3>
            <p>S·∫Øp ra m·∫Øt: T·∫£i ·∫£nh c√≥ ch·ªØ ƒë·ªÉ d·ªãch</p>
          </div>
          <div className={styles.featureCard}>
            <h3>üí¨ D·ªãch h·ªôi tho·∫°i</h3>
            <p>S·∫Øp ra m·∫Øt: D·ªãch cu·ªôc tr√≤ chuy·ªán th·ªùi gian th·ª±c</p>
          </div>
        </div>
      </div>
    </PageLayout>
  );
};

export default Translation;